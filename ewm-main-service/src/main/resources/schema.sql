-- Типы ENUM
CREATE TYPE event_state AS ENUM ('PENDING', 'PUBLISHED', 'CANCELED');
CREATE TYPE request_status AS ENUM ('PENDING', 'CONFIRMED', 'REJECTED');

-- Таблица users
CREATE TABLE IF NOT EXISTS users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR(254) NOT NULL,
    name VARCHAR(254) NOT NULL,
    CONSTRAINT uq_email UNIQUE (email)
);

-- Таблица categories
CREATE TABLE IF NOT EXISTS categories (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    CONSTRAINT uq_category_name UNIQUE (name)
);

-- Таблица locations
CREATE TABLE IF NOT EXISTS locations (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    lat REAL NOT NULL,
    lon REAL NOT NULL,
    CONSTRAINT uq_location_lat_lon UNIQUE (lat, lon)
);

-- Таблица events
CREATE TABLE IF NOT EXISTS events (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    annotation VARCHAR(2000) NOT NULL,
    description VARCHAR(7000),
    category_id BIGINT NOT NULL,
    initiator_id BIGINT NOT NULL,
    location_id BIGINT NOT NULL,
    title VARCHAR(254) NOT NULL,
    event_date TIMESTAMP NOT NULL,
    created_on TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    published_on TIMESTAMP,
    paid BOOLEAN DEFAULT FALSE,
    participant_limit INTEGER DEFAULT 0,
    request_moderation BOOLEAN DEFAULT TRUE,
    state event_state NOT NULL,
    CONSTRAINT fk_event_to_category FOREIGN KEY(category_id) REFERENCES categories(id),
    CONSTRAINT fk_event_to_user FOREIGN KEY(initiator_id) REFERENCES users(id),
    CONSTRAINT fk_event_to_location FOREIGN KEY(location_id) REFERENCES locations(id)
);

-- Таблица requests
CREATE TABLE IF NOT EXISTS requests (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    event_id BIGINT NOT NULL,
    requester_id BIGINT NOT NULL,
    created TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    status request_status NOT NULL,
    CONSTRAINT fk_request_to_event FOREIGN KEY(event_id) REFERENCES events(id),
    CONSTRAINT fk_request_to_user FOREIGN KEY(requester_id) REFERENCES users(id),
    CONSTRAINT uq_request UNIQUE (event_id, requester_id)
);

-- Таблица compilations
CREATE TABLE IF NOT EXISTS compilations (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    pinned BOOLEAN DEFAULT FALSE,
    title VARCHAR(50) NOT NULL,
    CONSTRAINT uq_compilation_name UNIQUE (title)
);

-- Таблица compilation_events
CREATE TABLE IF NOT EXISTS compilation_events (
    compilation_id BIGINT NOT NULL,
    event_id BIGINT NOT NULL,
    PRIMARY KEY (compilation_id, event_id),
    CONSTRAINT fk_ce_to_compilation FOREIGN KEY(compilation_id) REFERENCES compilations(id) ON DELETE CASCADE,
    CONSTRAINT fk_ce_to_event FOREIGN KEY(event_id) REFERENCES events(id) ON DELETE CASCADE
);